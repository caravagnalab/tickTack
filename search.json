[{"path":"https://caravagnalab.github.io/tickTack/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 tickTack authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a1_introduction.html","id":"input-data-structure","dir":"Articles","previous_headings":"","what":"Input Data Structure","title":"1. Introduction","text":"input data consists three components stored named elements list: mutations, cna, metadata. description component.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a1_introduction.html","id":"mutations","dir":"Articles","previous_headings":"Input Data Structure","what":"1. Mutations","title":"1. Introduction","text":"mutations component tibble containing information somatic mutations. row represents mutation, following columns: chr: Chromosome mutation occurs. : Start end positions mutation chromosome. ref alt: Reference alternate alleles. DP: Depth sequencing coverage mutation site. NV: Number reads supporting variant. VAF: Variant allele frequency, calculated NV / DP. sample: Unique identifier sample. example, first rows mutations look like :","code":"tickTack::pcawg_example$mutations %>% head() #> # A tibble: 6 × 9 #>   chr      from      to ref   alt      DP    NV   VAF sample                     #>   <chr>   <dbl>   <dbl> <chr> <chr> <dbl> <dbl> <dbl> <chr>                      #> 1 chr1  1015594 1015594 C     C        99    16 0.162 00db1b95-8ca3-4cc4-bb46-6… #> 2 chr1  1866371 1866371 C     C       250    67 0.268 00db1b95-8ca3-4cc4-bb46-6… #> 3 chr1  1921712 1921712 C     C        62    20 0.323 00db1b95-8ca3-4cc4-bb46-6… #> 4 chr1  2049858 2049858 G     G       118    15 0.127 00db1b95-8ca3-4cc4-bb46-6… #> 5 chr1  2357842 2357842 C     C        84    12 0.143 00db1b95-8ca3-4cc4-bb46-6… #> 6 chr1  2771915 2771915 G     G        90    27 0.3   00db1b95-8ca3-4cc4-bb46-6…"},{"path":"https://caravagnalab.github.io/tickTack/articles/a1_introduction.html","id":"copy-number-alterations-cna","dir":"Articles","previous_headings":"Input Data Structure","what":"2. Copy Number Alterations (CNA)","title":"1. Introduction","text":"cna component tibble describes regions genome alterations copy number. row represents genomic segment, following columns: chr: Chromosome segment. : Start end positions segment. Major minor: Major minor allele copy numbers. CCF Cancer cell fraction segment. total_cn: Total copy number (sum Major minor). preview cna data:","code":"tickTack::pcawg_example$cna %>% head() #> # A tibble: 6 × 7 #>   chr       from        to Major minor   CCF total_cn #>   <chr>    <dbl>     <dbl> <dbl> <dbl> <dbl>    <dbl> #> 1 chr1     10001    790008     2     2 1            4 #> 2 chr1    790009  13212499     2     2 1            4 #> 3 chr1  13212500  33458785     2     2 1            4 #> 4 chr1  33458786  33564126     2     2 0.194        4 #> 5 chr1  33564127  56834601     2     2 1            4 #> 6 chr1  56834602 121499999     2     2 1            4"},{"path":"https://caravagnalab.github.io/tickTack/articles/a1_introduction.html","id":"metadata","dir":"Articles","previous_headings":"Input Data Structure","what":"3. Metadata","title":"1. Introduction","text":"metadata component tibble containing sample-level information, following columns: sample: Unique identifier sample. purity: Tumor purity, representing proportion cancer cells sample. ploidy: Average ploidy sample. purity_conf_mad: Confidence interval purity estimate. wgd_status: Whole genome doubling status (e.g., wgd wgd). wgd_uncertain: Logical indicating uncertainty wgd_status. example metadata shown :","code":"tickTack::pcawg_example$metadata #> # A tibble: 1 × 6 #>   sample                  purity ploidy purity_conf_mad wgd_status wgd_uncertain #>   <chr>                    <dbl>  <dbl>           <dbl> <chr>      <lgl>         #> 1 00db1b95-8ca3-4cc4-bb4…  0.406   4.08           0.009 wgd        FALSE"},{"path":"https://caravagnalab.github.io/tickTack/articles/a1_introduction.html","id":"types-of-copy-number-alterations-cnas","dir":"Articles","previous_headings":"","what":"Types of Copy Number Alterations (CNAs)","title":"1. Introduction","text":"cna component can include different types copy number segments, categorized follows:","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a1_introduction.html","id":"clonal-simple-cnas","dir":"Articles","previous_headings":"Types of Copy Number Alterations (CNAs)","what":"Clonal Simple CNAs","title":"1. Introduction","text":"straightforward alterations specific copy number configurations: 1:0: Loss heterozygosity (LOH). 2:0: Copy neutral LOH. 1:1: Diploid heterozygous (assumed normal reference). 2:1: Trisomy. 2:2: Tetraploidy.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a1_introduction.html","id":"clonal-complex-and-subclonal-cnas","dir":"Articles","previous_headings":"Types of Copy Number Alterations (CNAs)","what":"Clonal Complex and Subclonal CNAs","title":"1. Introduction","text":"Clonal complex CNAs include clonal CNA considered simple. hand, subclonal CNAs involve mixture two subclones, subclone defined simple CNA.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a1_introduction.html","id":"timing-eligibility","dir":"Articles","previous_headings":"Types of Copy Number Alterations (CNAs)","what":"Timing Eligibility","title":"1. Introduction","text":"clonal CNAs specific configurations can timed: 2:1: Trisomy. 2:0: Copy neutral LOH. 2:2: Tetraploidy. Note : clonal CNAs accepted tickTack. Subclonal CNAs complex configurations supported timing analysis.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a1_introduction.html","id":"reference-genome-coordinates","dir":"Articles","previous_headings":"","what":"Reference genome coordinates","title":"1. Introduction","text":"tickTack uses genome coordinates reference system convert relative relative absolute coordinates, step required plot segments across whole genome. instance, mutation maps position 100100 chromosome chr2, absolute coordinate 100+L100 + L LL length chr1. reference system adopted tickTack needs therefore report length chromosome, plus information regarding boundary centromere. Note: mapping mutations onto segments independent reference genome, work far mutation CNA segments mapped reference. tickTack supports two coordinates reference genomes: hg19 GRCh37; hg38 GRCh38 (default), two dataframes stored inside package.","code":"tickTack::chr_coordinates_hg19 #> # A tibble: 24 × 6 #>    chr      length       from         to centromerStart centromerEnd #>    <chr>     <int>      <dbl>      <dbl>          <dbl>        <dbl> #>  1 chr1  249250621          0  249250621      121535434    124535434 #>  2 chr2  243199373  249250621  492449994      341576792    344576792 #>  3 chr3  198022430  492449994  690472424      582954848    585954848 #>  4 chr4  191154276  690472424  881626700      740132541    743132541 #>  5 chr5  180915260  881626700 1062541960      928032341    931032341 #>  6 chr6  171115067 1062541960 1233657027     1121372126   1124372126 #>  7 chr7  159138663 1233657027 1392795690     1291711358   1294711358 #>  8 chr8  146364022 1392795690 1539159712     1436634577   1439634577 #>  9 chr9  141213431 1539159712 1680373143     1586527391   1589527391 #> 10 chr10 135534747 1680373143 1815907890     1719628078   1722628078 #> # ℹ 14 more rows  tickTack::chr_coordinates_GRCh38 #> # A tibble: 24 × 6 #>    chr      length       from         to centromerStart centromerEnd #>    <chr>     <dbl>      <dbl>      <dbl>          <dbl>        <dbl> #>  1 chr1  248956422          0  248956422      122026459    124849229 #>  2 chr2  242193529  248956422  491149951      341144567    341144567 #>  3 chr3  198295559  491149951  689445510      581922409    582703370 #>  4 chr4  190214555  689445510  879660065      739157571    739157571 #>  5 chr5  181538259  879660065 1061198324      926145965    929381368 #>  6 chr6  170805979 1061198324 1232004303     1119752212   1119752212 #>  7 chr7  159345973 1232004303 1391350276     1290173956   1293382091 #>  8 chr8  145138636 1391350276 1536488912     1435384020   1435384020 #>  9 chr9  138394717 1536488912 1674883629     1579878547   1579878547 #> 10 chr10 133797422 1674883629 1808681051     1714570311   1716429449 #> # ℹ 14 more rows"},{"path":"https://caravagnalab.github.io/tickTack/articles/a2_Single_segment_timing.html","id":"overview-of-the-fit-function","dir":"Articles","previous_headings":"","what":"Overview of the fit Function","title":"2. Timing Clonal Peaks","text":"fit function uses either beta-binomial binomial model fit clonal peaks sequencing data. identifies segments genome specific karyotypes mutations meet input criteria, estimates timing clonal expansions.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a2_Single_segment_timing.html","id":"key-parameters","dir":"Articles","previous_headings":"Overview of the fit Function","what":"Key Parameters","title":"2. Timing Clonal Peaks","text":"segments: data frame segment information, including chr, , , Major, minor. mutations: data frame mutation data, including chr, , , DP, NV. purity: Tumor purity numeric value. possible_k: character vector possible karyotypes, defaulting c(\"2:1\", \"2:2\", \"2:0\"). alpha: Significance level, defaulting 0.05. min_mutations_number: Minimum number mutations required analysis, defaulting 2. beta_binomial: Logical flag use beta-binomial model, default FALSE. beta_binomial_disp: Dispersion parameter beta-binomial model, default 0.01.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a2_Single_segment_timing.html","id":"output","dir":"Articles","previous_headings":"Overview of the fit Function","what":"Output","title":"2. Timing Clonal Peaks","text":"function returns list containing: inference_results: Detailed timing estimates segment. summarized_results: Summary statistics estimated timing clonal peaks. segments meet criteria, function returns NULL.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a2_Single_segment_timing.html","id":"analyzing-ticktackpcawg_example","dir":"Articles","previous_headings":"","what":"Analyzing tickTack::pcawg_example","title":"2. Timing Clonal Peaks","text":"use tickTack::pcawg_example dataset demonstrate use fit function.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a2_Single_segment_timing.html","id":"input-data","dir":"Articles","previous_headings":"Analyzing tickTack::pcawg_example","what":"Input Data","title":"2. Timing Clonal Peaks","text":"tickTack::pcawg_example dataset contains three components: mutations: Mutation data. cna: Copy number alterations (CNA). metadata: Sample metadata, including tumor purity. Preview data:","code":"library(tickTack)  # View example dataset components mutations <- tickTack::pcawg_example$mutations cna <- tickTack::pcawg_example$cna metadata <- tickTack::pcawg_example$metadata  head(mutations) ##    chr    from      to ref alt  DP NV       VAF ## 1 chr1 1015594 1015594   C   C  99 16 0.1616162 ## 2 chr1 1866371 1866371   C   C 250 67 0.2680000 ## 3 chr1 1921712 1921712   C   C  62 20 0.3225806 ## 4 chr1 2049858 2049858   G   G 118 15 0.1271186 ## 5 chr1 2357842 2357842   C   C  84 12 0.1428571 ## 6 chr1 2771915 2771915   G   G  90 27 0.3000000 ##                                 sample ## 1 00db1b95-8ca3-4cc4-bb46-6b8c8019a7c7 ## 2 00db1b95-8ca3-4cc4-bb46-6b8c8019a7c7 ## 3 00db1b95-8ca3-4cc4-bb46-6b8c8019a7c7 ## 4 00db1b95-8ca3-4cc4-bb46-6b8c8019a7c7 ## 5 00db1b95-8ca3-4cc4-bb46-6b8c8019a7c7 ## 6 00db1b95-8ca3-4cc4-bb46-6b8c8019a7c7 head(cna) ##    chr     from        to Major minor       CCF total_cn ## 1 chr1    10001    790008     2     2 1.0000000        4 ## 2 chr1   790009  13212499     2     2 1.0000000        4 ## 3 chr1 13212500  33458785     2     2 1.0000000        4 ## 4 chr1 33458786  33564126     2     2 0.1943769        4 ## 5 chr1 33564127  56834601     2     2 1.0000000        4 ## 6 chr1 56834602 121499999     2     2 1.0000000        4 metadata ##                                 sample purity ploidy purity_conf_mad wgd_status ## 1 00db1b95-8ca3-4cc4-bb46-6b8c8019a7c7  0.406  4.082           0.009        wgd ##   wgd_uncertain ## 1         FALSE"},{"path":"https://caravagnalab.github.io/tickTack/articles/a2_Single_segment_timing.html","id":"running-the-fit-function","dir":"Articles","previous_headings":"Analyzing tickTack::pcawg_example","what":"Running the fit function","title":"2. Timing Clonal Peaks","text":"can run fit function tickTack::pcawg_example data infer timing clonal peaks","code":"# Extract input data segments <- tickTack::pcawg_example$cna mutations <- tickTack::pcawg_example$mutations purity <- tickTack::pcawg_example$metadata$purity  # Run the fit function results <- fit(   segments = segments,   mutations = mutations,   purity = purity,   possible_k = c(\"2:1\", \"2:2\", \"2:0\"),   beta_binomial = TRUE )"},{"path":"https://caravagnalab.github.io/tickTack/articles/a2_Single_segment_timing.html","id":"results","dir":"Articles","previous_headings":"Analyzing tickTack::pcawg_example","what":"Results","title":"2. Timing Clonal Peaks","text":"results object contains two components: inference_results summarized_results. can inspect understand timing clonal peaks:","code":"# View summarized results results$summarized_results ## # A tibble: 72 × 7 ##    tau_low tau_mean tau_high segment karyotype chr   segment_id               ##      <dbl>    <dbl>    <dbl>   <int> <chr>     <chr> <chr>                    ##  1   0.808    0.890    0.953       2 2:2       chr1  chr1_790009_13212499     ##  2   0.844    0.912    0.963       3 2:2       chr1  chr1_13212500_33458785   ##  3   0.818    0.888    0.942       5 2:2       chr1  chr1_33564127_56834601   ##  4   0.863    0.903    0.936       6 2:2       chr1  chr1_56834602_121499999  ##  5   0.393    0.683    0.892      10 2:2       chr1  chr1_143277461_149255831 ##  6   0.807    0.866    0.914      11 2:2       chr1  chr1_149255832_196892499 ##  7   0.811    0.863    0.909      12 2:2       chr1  chr1_196892500_247247500 ##  8   0.541    0.791    0.947      13 2:2       chr1  chr1_247247501_249250620 ##  9   0.769    0.825    0.875      30 2:2       chr4  chr4_74473_48199999      ## 10   0.464    0.770    0.956      31 2:2       chr4  chr4_48200000_52699999   ## # ℹ 62 more rows # View detailed inference results results$inference_results ## # A tibble: 1,152,000 × 5 ##      tau segment karyotype chr   segment_id           ##    <dbl>   <int> <chr>     <chr> <chr>                ##  1 0.890       2 2:2       chr1  chr1_790009_13212499 ##  2 0.882       2 2:2       chr1  chr1_790009_13212499 ##  3 0.878       2 2:2       chr1  chr1_790009_13212499 ##  4 0.890       2 2:2       chr1  chr1_790009_13212499 ##  5 0.881       2 2:2       chr1  chr1_790009_13212499 ##  6 0.933       2 2:2       chr1  chr1_790009_13212499 ##  7 0.918       2 2:2       chr1  chr1_790009_13212499 ##  8 0.896       2 2:2       chr1  chr1_790009_13212499 ##  9 0.865       2 2:2       chr1  chr1_790009_13212499 ## 10 0.924       2 2:2       chr1  chr1_790009_13212499 ## # ℹ 1,151,990 more rows"},{"path":"https://caravagnalab.github.io/tickTack/articles/a2_Single_segment_timing.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"Analyzing tickTack::pcawg_example","what":"Interpreting the output","title":"2. Timing Clonal Peaks","text":"inference_results: Contains posterior distributions timing estimates (tau) segment. summarized_results: Provides mean, lower bound, upper bound timing estimates segment.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a2_Single_segment_timing.html","id":"visulizing-the-output","dir":"Articles","previous_headings":"","what":"Visulizing the output","title":"2. Timing Clonal Peaks","text":"results can viewed genome-wise perspective using tickTack::plot_timing function","code":"tickTack::plot_timing(results, segments, colour_by = \"karyotype\")"},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"key-components-of-the-analysis","dir":"Articles","previous_headings":"","what":"Key Components of the Analysis","title":"3. Understanding Timing of Clonal Peaks","text":"timing results obtained following steps: Extracting clonal peaks: Theoretical peaks Variant Allele Frequency (VAF) spectrum calculated specific karyotypes tumor purity. Filtering mutations: Mutations within confidence intervals around peaks selected analysis. Fitting model: Bayesian inference performed using Stan model estimate timing clonal expansions.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"step-1-calculating-clonal-peaks","dir":"Articles","previous_headings":"Key Components of the Analysis","what":"Step 1: Calculating Clonal Peaks","title":"3. Understanding Timing of Clonal Peaks","text":"clonal peaks calculated using get_clonal_peaks function. function computes theoretical VAF peaks based karyotype tumor purity. computed using following equation: Peaki=Mi⋅P(Ntot⋅P)+2⋅(1−P) \\text{Peak}_i = \\frac{M_i \\cdot P}{(N_{\\text{tot}} \\cdot P) + 2 \\cdot (1 - P)} : MiM_i: multiplicity allele interest (e.g., major allele single copy heterozygosity). PP: tumor purity (value 0 1). NtotN_{\\text{tot}}: total number copies karyotype (e.g., sum major minor alleles). 22: Accounts two copies normal diploid cells.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"explanation","dir":"Articles","previous_headings":"Key Components of the Analysis > Step 1: Calculating Clonal Peaks","what":"Explanation","title":"3. Understanding Timing of Clonal Peaks","text":"numerator, Mi⋅PM_i \\cdot P, represents contribution tumor cell’s allele multiplicity adjusted tumor purity. denominator, (Ntot⋅P)+2⋅(1−P)(N_{\\text{tot}} \\cdot P) + 2 \\cdot (1 - P), normalizes peak account contributions tumor normal diploid cells sample.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"example-calculation","dir":"Articles","previous_headings":"Key Components of the Analysis > Step 1: Calculating Clonal Peaks","what":"Example Calculation","title":"3. Understanding Timing of Clonal Peaks","text":"karyotype k=2:1k = \\text{2:1} (major allele = 2, minor allele = 1) tumor purity P=0.4P = 0.4: Ntot=2+1=3N_{\\text{tot}} = 2 + 1 = 3. Compute peaks Mi=1M_i = 1 (single allele) Mi=2M_i = 2 (major allele) Peak1=1⋅0.4(3⋅0.4)+2⋅(1−0.4)=0.41.2+1.2=0.1667 \\text{Peak}_1 = \\frac{1 \\cdot 0.4}{(3 \\cdot 0.4) + 2 \\cdot (1 - 0.4)} = \\frac{0.4}{1.2 + 1.2} = 0.1667 Peak2=2⋅0.4(3⋅0.4)+2⋅(1−0.4)=0.81.2+1.2=0.3333 \\text{Peak}_2 = \\frac{2 \\cdot 0.4}{(3 \\cdot 0.4) + 2 \\cdot (1 - 0.4)} = \\frac{0.8}{1.2 + 1.2} = 0.3333","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"step-2-filtering-mutations","dir":"Articles","previous_headings":"Key Components of the Analysis","what":"Step 2: Filtering Mutations","title":"3. Understanding Timing of Clonal Peaks","text":"peaks obtained, mutations within genomic segment filtered based whether VAF values fall within confidence interval around peaks. confidence intervals computed using either: Binomial distribution: standard VAF estimation Beta-binomial distribution: account overdispersion","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"filtering-logic","dir":"Articles","previous_headings":"Key Components of the Analysis > Step 2: Filtering Mutations","what":"Filtering logic","title":"3. Understanding Timing of Clonal Peaks","text":"mutation, number variant reads (NV) compared confidence interval calculated depth (DP) peak: mutations passing test used model fitting.","code":"# Example pseudo-code for filtering probs <- c(alpha / 2, 1 - alpha / 2) for (p in peaks) {   quantiles <- qbinom(probs, DP, p) # or qbb for beta-binomial   if (NV >= quantiles[1] && NV <= quantiles[2]) {     # Mutation is accepted   } }"},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"step-3-bayesian-inference-with-stan","dir":"Articles","previous_headings":"Key Components of the Analysis","what":"Step 3: Bayesian Inference with Stan","title":"3. Understanding Timing of Clonal Peaks","text":"final step fit Stan model filtered mutations. model estimates posterior distribution tau, represents timing clonal expansions. stan code used model divided following pieces.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"data-block","dir":"Articles","previous_headings":"Key Components of the Analysis > Step 3: Bayesian Inference with Stan","what":"Data block","title":"3. Understanding Timing of Clonal Peaks","text":", data block defines inputs model uses: N: Total number mutations analyze. NV: Number variant reads observed mutation. DP: Total sequencing depth mutation. peaks: array two real values representing theoretical clonal peaks (e.g., 2:1 2:2 ratios hypothesized clonal frequencies).","code":"data {   int N;   array[N] int NV;   array[N] int DP;    array[2] real peaks; }"},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"parameters-block","dir":"Articles","previous_headings":"Key Components of the Analysis > Step 3: Bayesian Inference with Stan","what":"Parameters block","title":"3. Understanding Timing of Clonal Peaks","text":"parameters block contains: omega: vector representing probability contributions theoretical peak. follows Dirichlet distribution (standard approach modeling probabilities sum 1).","code":"parameters {   simplex[2] omega; }"},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"model-block","dir":"Articles","previous_headings":"Key Components of the Analysis > Step 3: Bayesian Inference with Stan","what":"Model block","title":"3. Understanding Timing of Clonal Peaks","text":"model block contains three components: Prior: line omega ~ dirichlet(rep_vector(2.0, 2)); applies uniform Dirichlet prior karyotype mixture probabilities (omega). means priori favor one clonal peak unless data evidence. Likelihood: likelihood computed using binomial_lpmf(NV[] | DP[], peaks[k]) (Negative binomial). term computes probability observing NV[] variant reads given sequencing depth DP[] given theoretical clonal peak value peaks[k]. Marginalization: line log_sum_exp(contributions) computes log marginal likelihood summing possible contributions (karyotypes) using softmax approach, allowing model integrate possible karyotype contributions (omega).","code":"model {   vector[2] contributions;    omega ~ dirichlet(rep_vector(2.0, 2));      for (i in 1:N) {     for (k in 1:2) {       contributions[k] = log(omega[k]) + binomial_lpmf(NV[i] | DP[i], peaks[k]);     }     target += log_sum_exp(contributions);   } }"},{"path":"https://caravagnalab.github.io/tickTack/articles/a3_Understanding_single_segment_timing.html","id":"final-step-conversion-from-omega-to-tau","dir":"Articles","previous_headings":"Key Components of the Analysis","what":"Final Step: Conversion from omega to tau","title":"3. Understanding Timing of Clonal Peaks","text":"fitting Bayesian model, posterior probabilities (omega) represent contribution theoretical clonal peaks. convert probabilities clonal timing estimates (tau) using following equations. 2:1 karyotypes: τ=3ω22ω2+ω1 \\tau = \\frac{3\\omega_2}{2\\omega_2 + \\omega_1} 2:2 2:0 karyotypes: τ=2ω22ω2+ω1 \\tau = \\frac{2\\omega_2}{2\\omega_2 + \\omega_1}","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"overview-of-the-fit_h-function","dir":"Articles","previous_headings":"","what":"Overview of the fit_h Function","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"fit_h function uses hierarchical model fit clonal peaks sequencing data considering grouping tructure chromosomes segments. identifies segments genome specific karyotypes mutations meet input criteria, estimates timing groups events assign segment clock.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"key-parameters","dir":"Articles","previous_headings":"Overview of the fit_h Function","what":"Key Parameters","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"x: CNAqc object mutations, cna metadata max_attempts: Number times variational inference repeated avoid local minima. INIT: Logical flag pass initialization values tothe variational inference, default TRURE. tolerance: tolerance two value subsequent iterations gradient ascent pn elbo, default 0.01. possible_k: character vector possible karyotypes, defaulting c(\"2:1\", \"2:2\", \"2:0\"). alpha: Significance level, defaulting 0.05. min_mutations_number: Minimum number mutations required analysis, defaulting 2. n_components: 0, strategy choose #components follows default procedure, otherwise inference repeated K equal maximun n_components.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"output","dir":"Articles","previous_headings":"Overview of the fit_h Function","what":"Output","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"function returns list containing: data: data used perform inference selecting ones respect assumptions used model. draws_and_summary: List 3 K inference performed . draws available clocks weights Summary statistics estimated timing clonal peaks. log_lik_matrix_list: Summary statistics estimated timing clonal peaks. elbo_iterations: Summary statistics estimated timing clonal peaks. segments meet criteria, function returns NULL.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"analyzing-ticktackpcawg_example_2","dir":"Articles","previous_headings":"","what":"Analyzing tickTack::pcawg_example_2","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"use tickTack::pcawg_example_2 dataset demonstrate use fit_h function.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"input-data","dir":"Articles","previous_headings":"Analyzing tickTack::pcawg_example_2","what":"Input Data","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"tickTack::pcawg_example_2 dataset contains three components: mutations: Mutation data. cna: Copy number alterations (CNA). metadata: Sample metadata, including tumor purity. Preview data:","code":"library(tickTack)  # View example dataset components mutations <- tickTack::pcawg_example_2$mutations cna <- tickTack::pcawg_example_2$cna metadata <- tickTack::pcawg_example_2$metadata  head(mutations) ##    chr    from      to ref alt DP NV       VAF ## 1 chr1 1018754 1018754   C   C 51 24 0.4705882 ## 2 chr1 1107556 1107556   C   C 53 17 0.3207547 ## 3 chr1 1127192 1127192   C   C 78 13 0.1666667 ## 4 chr1 1255263 1255263   C   C 66 23 0.3484848 ## 5 chr1 1474126 1474126   C   C 68 17 0.2500000 ## 6 chr1 1532289 1532289   G   G 39  6 0.1538462 ##                                 sample NR Hugo_Symbol Strand ## 1 3b7810f7-f8ff-4d62-b766-3ba06170194c 27    C1orf159      + ## 2 3b7810f7-f8ff-4d62-b766-3ba06170194c 36      TTLL10      + ## 3 3b7810f7-f8ff-4d62-b766-3ba06170194c 65      TTLL10      + ## 4 3b7810f7-f8ff-4d62-b766-3ba06170194c 43      CPSF3L      + ## 5 3b7810f7-f8ff-4d62-b766-3ba06170194c 51     TMEM240      + ## 6 3b7810f7-f8ff-4d62-b766-3ba06170194c 33    C1orf233      + ##   Variant_Classification Variant_Type Tumor_Seq_Allele2    dbSNP_RS ## 1                 Intron          SNP                 T rs188930619 ## 2                5'Flank          SNP                 T        <NA> ## 3                 Intron          SNP                 T        <NA> ## 4                 Intron          SNP                 T rs552646507 ## 5                 Intron          SNP                 T rs572658610 ## 6                    IGR          SNP                 A rs575347755 ##   dbSNP_Val_Status          Matched_Norm_Sample_Barcode     Genome_Change ## 1             <NA> 5d5a6488-dc29-4ab5-8a98-e94fd5be113f g.chr1:1018754C>T ## 2             <NA> 5d5a6488-dc29-4ab5-8a98-e94fd5be113f g.chr1:1107556C>T ## 3             <NA> 5d5a6488-dc29-4ab5-8a98-e94fd5be113f g.chr1:1127192C>T ## 4      byFrequency 5d5a6488-dc29-4ab5-8a98-e94fd5be113f g.chr1:1255263C>T ## 5      byFrequency 5d5a6488-dc29-4ab5-8a98-e94fd5be113f g.chr1:1474126C>T ## 6             <NA> 5d5a6488-dc29-4ab5-8a98-e94fd5be113f g.chr1:1532289G>A ##             ref_context gc_content i_1000genomes_AF i_1000genomes_ID ## 1 cagGGGGTTACGTCAGGGTCT      0.602       0.00019968      rs188930619 ## 2 ccagctcaggcatcagtggct      0.692               NA             <NA> ## 3 gtatcccttacgggaaacgaa      0.418               NA             <NA> ## 4 gCAAGGGCAGCGCCTGGCAAG      0.652       0.00099840      rs552646507 ## 5 GCATGTCACACGCTTAGCAAC      0.587               NA             <NA> ## 6 ACTTCGGGGCGGGACTGGAAG      0.607               NA             <NA> ##                i_Callers i_GERM1000G i_GERMOVLP i_LOWSUPPORT i_NORMALPANEL ## 1 broad,dkfz,muse,sanger          NA         NA           NA            NA ## 2 broad,dkfz,muse,sanger          NA         NA           NA            NA ## 3 broad,dkfz,muse,sanger          NA         NA           NA            NA ## 4 broad,dkfz,muse,sanger          NA         NA           NA            NA ## 5 broad,dkfz,muse,sanger          NA         NA           NA            NA ## 6 broad,dkfz,muse,sanger          NA         NA           NA            NA ##   i_NumCallers i_OXOGFAIL i_REMAPFAIL i_SEXF  i_VAF i_bPcr i_bSeq i_qual ## 1            4         NA          NA     NA 0.4706     NA     NA   None ## 2            4         NA          NA     NA 0.3208     NA     NA   None ## 3            4         NA          NA     NA 0.1667     NA     NA   None ## 4            4         NA          NA     NA 0.3485     NA     NA   None ## 5            4         NA          NA     NA   0.25     NA     NA   None ## 6            4         NA          NA     NA 0.1538     NA     NA   None ##   i_repeat_masker i_signature_N3 i_signature_R1 i_signature_R2 i_snv_near_indel ## 1            <NA>          FALSE          FALSE          FALSE            FALSE ## 2           MLT1D          FALSE          FALSE          FALSE            FALSE ## 3          MER9a1          FALSE          FALSE          FALSE            FALSE ## 4            <NA>          FALSE          FALSE          FALSE            FALSE ## 5            <NA>          FALSE          FALSE          FALSE            FALSE ## 6            <NA>          FALSE          FALSE          FALSE            FALSE ##   i_model_score i_n_vaf Project_Code Donor_ID ## 1            NA      NA   Kidney-RCC  DO46877 ## 2            NA      NA   Kidney-RCC  DO46877 ## 3            NA      NA   Kidney-RCC  DO46877 ## 4            NA      NA   Kidney-RCC  DO46877 ## 5            NA      NA   Kidney-RCC  DO46877 ## 6            NA      NA   Kidney-RCC  DO46877 head(cna) ##    chr      from        to Major minor CCF total_cn star level methods_agree ## 1 chr1     10001 121499999     1     1   1        2    3     a             6 ## 2 chr1 121500000 128899999     1     1   1        2    2     d             4 ## 3 chr1 128900000 247247500     1     1   1        2    3     a             6 ## 4 chr1 247247501 249250620     1     1   1        2    2     d             4 ## 5 chr2     66017  90499999     1     1   1        2    3     a             6 ## 6 chr2  90500000  96799999     1     1   1        2    3     a             6 ##   absolute_broad_major_cn absolute_broad_minor_cn absolute_broad_het_error ## 1                       1                       1               0.03993165 ## 2                       1                       1               0.05000000 ## 3                       1                       1               0.04043537 ## 4                      NA                      NA                       NA ## 5                       1                       1               0.04002173 ## 6                       1                       1               0.05000000 ##   absolute_broad_cov_error aceseq_copy_number aceseq_minor_cn aceseq_major_cn ## 1                0.1174128           2.000000        1.000000        1.000000 ## 2                0.1000000           2.000000        1.000000        1.000000 ## 3                0.1258711           2.000000        1.000000        1.000000 ## 4                       NA           2.136427        1.068214        1.068214 ## 5                0.1149430           2.000000        1.000000        1.000000 ## 6                0.3640664           2.000000        1.000000        1.000000 ##   battenberg_nMaj1_A battenberg_nMin1_A battenberg_frac1_A battenberg_nMaj2_A ## 1                  1                  1                  1                 NA ## 2                  1                  1                  1                 NA ## 3                  1                  1                  1                 NA ## 4                  1                  1                  1                 NA ## 5                  1                  1                  1                 NA ## 6                  1                  1                  1                 NA ##   battenberg_nMin2_A battenberg_frac2_A battenberg_SDfrac_A ## 1                 NA                 NA                  NA ## 2                 NA                 NA                  NA ## 3                 NA                 NA                  NA ## 4                 NA                 NA                  NA ## 5                 NA                 NA                  NA ## 6                 NA                 NA                  NA ##   battenberg_SDfrac_A_BS battenberg_frac1_A_0.025 battenberg_frac1_A_0.975 ## 1                     NA                       NA                       NA ## 2                     NA                       NA                       NA ## 3                     NA                       NA                       NA ## 4                     NA                       NA                       NA ## 5                     NA                       NA                       NA ## 6                     NA                       NA                       NA ##   clonehd_copy_number clonehd_minor_cn clonehd_major_cn sclust_nMaj1_A ## 1                   2                1                1              1 ## 2                  NA               NA               NA             NA ## 3                   2                1                1              1 ## 4                   2                1                1              1 ## 5                   2                1                1              1 ## 6                   2                1                1              1 ##   sclust_nMin1_A sclust_frac1_A sclust_nMaj2_A sclust_nMin2_A sclust_frac2_A ## 1              1              1             NA             NA             NA ## 2             NA             NA             NA             NA             NA ## 3              1              1             NA             NA             NA ## 4              1              1             NA             NA             NA ## 5              1              1             NA             NA             NA ## 6              1              1             NA             NA             NA ##   jabba_copy_number jabba_minor_cn jabba_major_cn ## 1                 2              1              1 ## 2                 2              1              1 ## 3                 2              1              1 ## 4                 2              1              1 ## 5                 2              1              1 ## 6                 2              1              1 metadata ##                                 sample purity ploidy purity_conf_mad wgd_status ## 1 3b7810f7-f8ff-4d62-b766-3ba06170194c  0.611  1.924           0.002     no_wgd ##   wgd_uncertain ## 1         FALSE"},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"running-the-fit_h-function","dir":"Articles","previous_headings":"Analyzing tickTack::pcawg_example_2","what":"Running the fit_h function","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"can run fit_h function tickTack::pcawg_example_2 data infer timing clonal peaks","code":"# Extract input data data <- tickTack::pcawg_example_2 tolerance = 0.1  # Run the fit function data <- fit_h(   x = data,   max_attempts = 2,   INIT = TRUE,   tolerance = tolerance )"},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"results","dir":"Articles","previous_headings":"Analyzing tickTack::pcawg_example_2","what":"Results","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"results object returned together CNAqc input object contains four components: data, draws_and_summary, log_lik_matrix_list elbo_iterations.","code":"# View summary for a specific K, here K = 2 results <- data$results"},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"interpreting-the-output","dir":"Articles","previous_headings":"Analyzing tickTack::pcawg_example_2","what":"Interpreting the output","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"can inspect main output interest understand timing clonal peaks. results$draws_and_summary contains: - draws draws approximate posterior distribution taus weights; - summary summary main statistics approximate posterior distributions; - summarized_results represents clock assignment, tibble estimate taus segment copy number event included hierarchical inference","code":"# View summary for a specific K, here K = 2 results$draws_and_summary[[2]]$summary ## # A tibble: 24 × 7 ##    variable    mean   median      sd      mad         q5     q95 ##    <chr>      <dbl>    <dbl>   <dbl>    <dbl>      <dbl>   <dbl> ##  1 tau[1]   0.127   0.123    0.0370  0.0347   0.0752     0.195   ##  2 tau[2]   0.951   0.954    0.0179  0.0171   0.919      0.975   ##  3 w[1,1]   0.844   0.938    0.213   0.0811   0.340      0.997   ##  4 w[2,1]   0.890   0.969    0.180   0.0428   0.434      0.999   ##  5 w[3,1]   0.979   0.991    0.0437  0.0101   0.924      0.999   ##  6 w[4,1]   0.997   0.997    0.00252 0.00153  0.992      0.999   ##  7 w[5,1]   0.0132  0.000682 0.0582  0.000973 0.00000917 0.0457  ##  8 w[6,1]   0.00246 0.000547 0.00991 0.000696 0.0000328  0.00896 ##  9 w[7,1]   0.00772 0.00126  0.0287  0.00160  0.0000601  0.0309  ## 10 w[8,1]   0.963   0.983    0.0600  0.0185   0.862      0.998   ## # ℹ 14 more rows # View detailed summarized results for a specific K, here K = 2 results$draws_and_summary[[2]]$summarized_results ## # A tibble: 11 × 8 ##    segment_original_indx segment_name      segment_id karyotype chr   clock_mean ##                    <int> <chr>                  <dbl> <chr>     <chr>      <dbl> ##  1                    38 chr5_75225353_75…          1 2:1       chr5       0.123 ##  2                    40 chr5_76857368_76…          2 2:1       chr5       0.123 ##  3                    42 chr5_77822720_82…          3 2:1       chr5       0.123 ##  4                    44 chr5_83468190_18…          4 2:1       chr5       0.123 ##  5                    46 chr6_242501_4335…          5 2:0       chr6       0.954 ##  6                    48 chr6_4347801_290…          6 2:0       chr6       0.954 ##  7                    50 chr6_29161839_38…          7 2:0       chr6       0.954 ##  8                    54 chr7_65454_99371…          8 2:1       chr7       0.123 ##  9                    56 chr7_9946564_579…          9 2:1       chr7       0.123 ## 10                    57 chr7_5.8e+07_616…         10 2:1       chr7       0.123 ## 11                    58 chr7_61700000_15…         11 2:1       chr7       0.123 ## # ℹ 2 more variables: clock_low <dbl>, clock_high <dbl>"},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"obtain-the-best-k-with-model_selection_h","dir":"Articles","previous_headings":"Analyzing tickTack::pcawg_example_2","what":"Obtain the best K with model_selection_h","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"W e can run model_selection_h function obtain scores inference performed different K take one best ICL score BIC score prefer 2 components instead 1, otherwise choose 1 best K. function takes input results n_components outputs best_K corresponding best_fit together model_selection_tibble entropy_list used evaluate ICL score.","code":"results_model_selection <- tickTack::model_selection_h(results, n_components = 0) ## Warning: Some Pareto k diagnostic values are too high. See help('pareto-k-diagnostic') for details. ## Warning: Some Pareto k diagnostic values are too high. See help('pareto-k-diagnostic') for details. ## Warning: Some Pareto k diagnostic values are too high. See help('pareto-k-diagnostic') for details. best_K <- results_model_selection$best_K model_selection_tibble <- results_model_selection$model_selection_tibble entropy <- results_model_selection$entropy_list"},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"visulizing-the-output","dir":"Articles","previous_headings":"","what":"Visulizing the output","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"results can viewed genome-wise perspective using tickTack::plot_timing_h function.","code":"tickTack::plot_timing_h(results, 2)"},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"visualize-distributions-of-draws-from-the-approximate-posterior","dir":"Articles","previous_headings":"","what":"Visualize distributions of draws from the approximate posterior","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"approximate posterior distributions can viewed using tickTack::plot_posterior_clocks_h tickTack::plot_posterior_weights_h functions, internally use functions Bayesplot.","code":"posterior_clocks <- tickTack::plot_posterior_clocks_h(results, 2) ## Scale for x is already present. ## Adding another scale for x, which will replace the existing scale. posterior_weights <- tickTack::plot_posterior_weights_h(results, 2)"},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"visualize-the-behavior-of-the-elbo-during-the-inference","dir":"Articles","previous_headings":"","what":"Visualize the behavior of the ELBO during the inference","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"","code":"K = nrow(results_model_selection$model_selection_tibble)  p_elbo <- list() for (i in 1:K){   p_elbo[[i]] <- tickTack::plot_elbo_h(results$elbo_iterations[[i]]) + ggplot2::ggtitle(paste0(\"K = \", i)) } p_elbo <- gridExtra::grid.arrange(grobs = p_elbo, ncol = 2)  #add global title p_elbo ## TableGrob (2 x 2) \"arrange\": 4 grobs ##   z     cells    name           grob ## 1 1 (1-1,1-1) arrange gtable[layout] ## 2 2 (1-1,2-2) arrange gtable[layout] ## 3 3 (2-2,1-1) arrange gtable[layout] ## 4 4 (2-2,2-2) arrange gtable[layout]"},{"path":"https://caravagnalab.github.io/tickTack/articles/a4_Multiple_segment_timing.html","id":"visualize-all-the-inference-results-for-each-k","dir":"Articles","previous_headings":"","what":"Visualize all the inference results for each K","title":"4. Timing Clonal Peaks in a hierarchical fashioin","text":"","code":"plot_model_selection_inference <- list() for (i in 1:K){   plot_model_selection_inference[[i]] <- tickTack::plot_timing_h(results, i) + ggplot2::ggtitle(paste0(\"K = \", i)) } plot_model_selection_inference <- gridExtra::grid.arrange(grobs = plot_model_selection_inference, ncol = 2) #add global title plot_model_selection_inference ## TableGrob (2 x 2) \"arrange\": 4 grobs ##   z     cells    name           grob ## 1 1 (1-1,1-1) arrange gtable[layout] ## 2 2 (1-1,2-2) arrange gtable[layout] ## 3 3 (2-2,1-1) arrange gtable[layout] ## 4 4 (2-2,2-2) arrange gtable[layout]"},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"key-components-of-the-analysis","dir":"Articles","previous_headings":"","what":"Key Components of the Analysis","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"function performs hierarchical Bayesian inference using ADVI approximate posterior distributions clock parameters copy number alterations (CNAs). iteratively fits models different numbers components (k_max), computes posterior summaries, logs ELBO (Evidence Lower Bound) values fit. input data : - x list: CNAqc object containing mutation CNA data. - max_attempts num: Maximum number repeated inference attempts ADVI. - INIT logical: Whether perform initialization parameters. - tolerance num: Tolerance level ELBO optimization. - possible_k chr: Possible karyotype configurations (e.g., \"2:1\", \"2:2\", \"2:0\"). - alpha num: Confidence interval level binomial filtering. - min_mutations_number num: Minimum number mutations required segment included inference. - n_components num: Number components specified user (overrides automatic determination). returns list containing processed input data, posterior draws, ELBO iterations, inference results.","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"step-1-validate-input-data","dir":"Articles","previous_headings":"Steps of the fit_h Function","what":"Step 1: Validate Input Data","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"Extract mutation CNA data CNAqc object. Ensure mutations CNA data non-empty. empty, function terminates error.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"step-2-prepare-input-data","dir":"Articles","previous_headings":"Steps of the fit_h Function","what":"Step 2: Prepare Input Data","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"Use prepare_input_data filter format mutation CNA data based provided karyotypes (possible_k), confidence intervals (alpha), minimum mutations per segment (min_mutations_number). Extract accepted_cna input_data inference.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"step-3-determine-maximum-number-of-components-k_max","dir":"Articles","previous_headings":"Steps of the fit_h Function","what":"Step 3: Determine Maximum Number of Components (k_max)","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"n_components provided, calculate k_max based number segments (S) using predefined rules.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"step-4-iterative-inference-for-each-component-count-k","dir":"Articles","previous_headings":"Steps of the fit_h Function","what":"Step 4: Iterative Inference for Each Component Count (K)","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"K 1 k_max: - Add K input_data. - INIT enabled, initialize parameters using get_initialization. - Fit model using fit_variational_h ADVI. - Extract relevant posterior variables (tau w) compute summaries. - Compute clock assignments segments using compute_clock_assignment. - Store results, including posterior summaries clock assignments. model fit described following probabilistic graphical model. model estimates posterior distribution tau weights , represents timing clonal expansions. stan code used model divided following pieces.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"data-block","dir":"Articles","previous_headings":"Steps of the fit_h Function > Step 4: Iterative Inference for Each Component Count (K)","what":"Data block","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"","code":"data {   // input the karyotyoe to specify the formula for theta    int S;                        // number of segments   int K;                        // clocks   int N;                        // total number of mutations   array[S] int karyotype;       // list of karyotype associated wit the segments   array[N] int seg_assignment;  // segment_id assignment to the mutations   array[S,2] real peaks;        //for each segment, S vectors of dim 2   array[N] int NV;              // for all the segments   array[N] int DP; }"},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"parameters-block","dir":"Articles","previous_headings":"Steps of the fit_h Function > Step 4: Iterative Inference for Each Component Count (K)","what":"Parameters block","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"","code":"parameters {   array[S] simplex[K] w;              // simplex[K] w[N] mixing proportions for each segment group; check prior should be more on the higher values   vector<lower=0.0001,upper=0.999>[K] tau;     //clocks   ordered[K] tau  vector<lower=0,upper=1>[K]   //vector[K] alpha;   simplex[K] phi;   real<lower=0> kappa; }"},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"transformed-parameters-block","dir":"Articles","previous_headings":"Steps of the fit_h Function > Step 4: Iterative Inference for Each Component Count (K)","what":"Transformed parameters block","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"","code":"transformed parameters{    array[S] vector[K] perturbed_w;  // Pesi perturbati e rinormalizzati   real<lower=0> epsilon;   epsilon = 0.01;   for (s in 1:S) {     for (k in 1:K) {       if (w[s][k] > 0.5) {         perturbed_w[s][k] = w[s][k] - epsilon;       } else {         perturbed_w[s][k] = w[s][k] + epsilon;       }     }     // Rinormalizza i pesi     perturbed_w[s] = perturbed_w[s] / sum(perturbed_w[s]);   }    array[S,K,2] real<lower=0,upper=1> theta; //binomial mixing proportions // array[S,K] simplex[2] theta;    for (s in 1:S){    for (k in 1:K){       if (karyotype[s] == 1) {         theta[s,k,1] = (3 - 2*tau[k]) / (3 - tau[k]);      // 2:1         theta[s,k,2] = tau[k] / (3 - tau[k]);       }       else {         theta[s,k,1] = (2 - 2*tau[k]) / (2 - tau[k]);      // 2:0 - 2:2         theta[s,k,2] = tau[k]/(2 - tau[k]);       }     }   }    vector[K] alpha = kappa * phi; }"},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"model-block","dir":"Articles","previous_headings":"Steps of the fit_h Function > Step 4: Iterative Inference for Each Component Count (K)","what":"Model block","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"model block contains three components: Prior: line tau[k] ~ beta(2,2) applies Beta prior components’ values. line w[s] ~ dirichlet(alpha); applies Dirichlet prior mixture probabilities depends alpha = phi * kappa. means priori favor one clock component unless data evidence. lines phi ~ dirichlet(rep_vector(1.0, K)); kappa ~ gamma(2, 0.5); apply priors reparametrization values alpha parameter weights. Likelihood: likelihood computed using binomial_lpmf(NV[] | DP[], peaks[seg_assignment[], j]) (Negative binomial). term computes probability observing NV[] variant reads given sequencing depth DP[] given theoretical clonal peak value peaks[k]. Marginalization: line log_sum_exp(contributions) computes log marginal likelihood summing possible contributions (karyotypes) using softmax approach, allowing model integrate possible karyotype contributions (omega).","code":"model {   vector[K*2] contributions;              //real contributions[K * 2];  // Array to hold contributions for log_sum_exp    // priors   phi ~ dirichlet(rep_vector(1.0, K));;   kappa ~ gamma(2, 0.5);                  // strictly positive with a long right tail.                                           // phi = expected value of w, kappa (minus K) = concentrazione della distribuzione / strength of the prior mean measured in number of prior observations.    for (s in 1:S){       w[s] ~ dirichlet(alpha);   }    for (k in 1:K) {     tau[k] ~ beta(2,2);                   // Beta prior for tau   }       //likelihood     for (i in 1:N) {     int c = 1;          for (k in 1:K) {       for (j in 1:2) {                  real contribution = log(perturbed_w[seg_assignment[i], k]) +                             log(theta[seg_assignment[i], k, j]) +                             binomial_lpmf(NV[i] | DP[i], peaks[seg_assignment[i], j]);          contributions[c] = contribution;         c += 1;       }     }     target += log_sum_exp(contributions);   }  }"},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"generated-quantities","dir":"Articles","previous_headings":"Steps of the fit_h Function","what":"Generated quantities","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"","code":"generated quantities {      //array[N] vector[K*2] log_lik_matrix;      vector[N] log_lik;                        // log-likelihood for each data point   for (i in 1:N) {     vector[K*2] contributions;     int c = 1;     for (k in 1:K) {       for (j in 1:2) {         contributions[c] = log(w[seg_assignment[i],k]) + log(theta[seg_assignment[i],k,j]) + binomial_lpmf(NV[i] | DP[i], peaks[seg_assignment[i],j]);         c += 1;       }     }     log_lik[i] = log_sum_exp(contributions);     //log_lik_matrix[i] = contributions;   }  }"},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"step-5-log-elbo-iterations","dir":"Articles","previous_headings":"Steps of the fit_h Function","what":"Step 5: Log ELBO Iterations","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"Extract ELBO values output files model fit save K.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"step-6-compile-results","dir":"Articles","previous_headings":"Steps of the fit_h Function","what":"Step 6: Compile Results","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"Store posterior draws, summaries, log-likelihood contributions, ELBO iterations lists K. data: Processed input data. draws_and_summary: Posterior draws summaries K. log_lik_matrix_list: Log-likelihood matrices K. elbo_iterations: ELBO iteration data K.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/a5_Understanding_multiple_segments_timing.html","id":"step-7-update-cnaqc-object","dir":"Articles","previous_headings":"Steps of the fit_h Function","what":"Step 7: Update CNAqc Object","title":"5. Understanding Timing of Multiple Clonal Peaks","text":"Add results CNAqc object results_timing.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/tickTack.html","id":"overview","dir":"Articles","previous_headings":"","what":"Overview","title":"tickTack","text":"tickTack requires input CNAqc object attributes cna, mutations metadata. main input tool : read counts somatic mutations single-nucleotide variants (SNVs) mutation attribute; allele-specific copy number segments (CNAs) clonal segments must encoded cna attribute; tumor purity estimate metadata. tool uses chromosome coordinates map mutations segments. conversion relative absolute genome coordinates requires fix reference genome build; supported reference GRCh38/hg17 also supported CNAqc. tickTack can used : time genomic segments affected Copy Number event, obtaining one clock per segment time multiple CNAs hierarchical fashion, identifying KK clocks cluster segemnts together. following concepts used infer copy number timing.","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/tickTack.html","id":"vaf-peaks","dir":"Articles","previous_headings":"Overview","what":"VAF peaks","title":"tickTack","text":"point mutations present duplicated region duplicated copy segment. Therefore can use proportion mutations happede Copy Number event distinguishing mutations single copy double copies.  Therefore, single segment value clock associated Copy Number event obtained transformation proportions mutations single double copy. following quantities need considered:  case trisomy without LOH, can consider fact , τ\\tau, 1 chromosome accumulate mutations duplicate, accumulate mutations remain single copy. hand, τ\\tau, chromosomes accumulate mutations remain single copy. Therefore one can write system: {N2=ρτN1=ρτ+3ρ(1−τ)\\begin{align}     \\begin{cases}         N_2 = \\rho \\tau           N_1 = \\rho \\tau + 3\\rho(1 - \\tau) \\nonumber      \\end{cases} \\end{align} Using first one obtain ρ\\rho inserting second one, solution τ\\tau becomes: $$     N_1 = N_2 + \\frac{3N_2}{\\tau}(1-\\tau) \\hspace{2mm} \\rightarrow \\hspace{2mm} N_1 + 2N_2 = \\frac{3N_2}{\\tau} \\hspace{2mm} \\rightarrow \\hspace{2mm} \\tau = \\frac{3N_2}{N_1 + 2N_2} $$ case CNLOH segment doubling can treated together. fact, first case, τ\\tau mutations duplicate accumulate single chromosome τ\\tau mutations remain single copy accumulate two chromosomes. system therefore becomes: {N2=ρτN1=2ρ(1−τ)\\begin{align}     \\begin{cases}         N_2 = \\rho \\tau           N_1 = 2\\rho(1 - \\tau) \\nonumber      \\end{cases} \\end{align} similar things happens case 2:2, difference number chromosomes accumulating certain type mutation double, τ\\tau. Hence, system becomes: {N2=2ρτN1=4ρ(1−τ)\\begin{align}     \\begin{cases}         N_2 = 2\\rho \\tau           N_1 = 4\\rho(1 - \\tau) \\nonumber      \\end{cases} \\end{align} Therefore, two system can solved similarly (can simply drop factor 2 second case). solution τ\\tau easily becomes: $$   N_1 = \\frac{2N_2(1-\\tau)}{\\tau} \\hspace{2mm} \\rightarrow \\hspace{2mm} \\tau(N_1 + 2N_2) = 2N_2 \\hspace{2mm} \\rightarrow \\hspace{2mm} \\tau = \\frac{2N_2}{2N_2 + N_1} $$","code":""},{"path":"https://caravagnalab.github.io/tickTack/articles/tickTack.html","id":"clonal-cnas","dir":"Articles","previous_headings":"Overview","what":"Clonal CNAs","title":"tickTack","text":"Consider: mutations sitting segment nA:nBnA:nB; tumour purity π\\pi; healthy diploid normal; Since proportion reads tumour π(nA+nB)\\pi(n_A+n_B), normal 2(1−π)2(1-\\pi). , muations present mm copies tumour genome peak VAF value vm(c)=mπc2(1−π)+π(nA+nB) v_m(c) = \\dfrac{m \\pi c}{ 2 (1 - \\pi) + \\pi (n_A+n_B) }","code":""},{"path":"https://caravagnalab.github.io/tickTack/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"First Last. Author, maintainer.","code":""},{"path":"https://caravagnalab.github.io/tickTack/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Last F (2024). tickTack: Timing Inference Copy number alterations: Tracking Alterations Cancer Karyotypes. R package version 0.0.0.9, https://caravagnalab.github.io/tickTack/.","code":"@Manual{,   title = {tickTack: Timing Inference for Copy number alterations: Tracking Alterations in Cancer Karyotypes},   author = {First Last},   year = {2024},   note = {R package version 0.0.0.9},   url = {https://caravagnalab.github.io/tickTack/}, }"},{"path":"https://caravagnalab.github.io/tickTack/index.html","id":"ticktack-","dir":"","previous_headings":"","what":"Timing Inference for Copy number alterations: Tracking Alterations in Cancer Karyotypes","title":"Timing Inference for Copy number alterations: Tracking Alterations in Cancer Karyotypes","text":"tickTack package infer kinetic parameters evolving population whose size observed discrete intervals time. tool able time simple CNAs segment affected time CNAs hierarchical fashion, grouping together segments likely underwent CNA concurrently","code":""},{"path":[]},{"path":[]},{"path":"https://caravagnalab.github.io/tickTack/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Timing Inference for Copy number alterations: Tracking Alterations in Cancer Karyotypes","text":"can install released version tickTack GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"caravagnalab/tickTack\")"},{"path":"https://caravagnalab.github.io/tickTack/index.html","id":"copyright-and-contacts","dir":"","previous_headings":"Installation","what":"Copyright and contacts","title":"Timing Inference for Copy number alterations: Tracking Alterations in Cancer Karyotypes","text":"Sara Cocomello, Giovanni Santacatterina, Giulio Caravagna. Cancer Data Science (CDS) Laboratory, University Trieste, Italy.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/CNA.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract CNAs. — CNA","title":"Extract CNAs. — CNA","text":"Getter obtain copy number calls object.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/CNA.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract CNAs. — CNA","text":"","code":"CNA(x, type = c(\"clonal\", \"subclonal\"))"},{"path":"https://caravagnalab.github.io/tickTack/reference/CNA.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract CNAs. — CNA","text":"x CNAqc object. type \"clonal\" clonal CNAs, \"subclonal\" subclonal CNAs.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/CNA.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract CNAs. — CNA","text":"tibble data.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/Mutations.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract mutations. — Mutations","title":"Extract mutations. — Mutations","text":"Getter obtain mutation calls object.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/Mutations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract mutations. — Mutations","text":"","code":"Mutations(x, cna = c(\"clonal\", \"subclonal\"), type = c(\"SNV\", \"indel\"))"},{"path":"https://caravagnalab.github.io/tickTack/reference/Mutations.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract mutations. — Mutations","text":"x CNAqc object. cna \"clonal\" clonal CNAs, \"subclonal\" subclonal CNAs. type \"SNV\" single-nucleotide variants, \"indel\" insertion-deletions.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/Mutations.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract mutations. — Mutations","text":"tibble data.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/chr_coordinates_GRCh38.html","id":null,"dir":"Reference","previous_headings":"","what":"GRCh38 coordinates — chr_coordinates_GRCh38","title":"GRCh38 coordinates — chr_coordinates_GRCh38","text":"Reference coordinates (GRCh38)","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/chr_coordinates_GRCh38.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"GRCh38 coordinates — chr_coordinates_GRCh38","text":"","code":"chr_coordinates_GRCh38"},{"path":[]},{"path":"https://caravagnalab.github.io/tickTack/reference/chr_coordinates_GRCh38.html","id":"chr-coordinates-grch-","dir":"Reference","previous_headings":"","what":"chr_coordinates_GRCh38","title":"GRCh38 coordinates — chr_coordinates_GRCh38","text":"data frame: chr chromosome identifier length length chromosome Absolute coordinate chromosome start Absolute coordinate chromosome end centromerStart Absolute coordinate chromosome centromere start centromerEnd Absolute coordinate chromosome centromere end","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/chr_coordinates_GRCh38.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"GRCh38 coordinates — chr_coordinates_GRCh38","text":".","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/chr_coordinates_hg19.html","id":null,"dir":"Reference","previous_headings":"","what":"hg19 coordinates — chr_coordinates_hg19","title":"hg19 coordinates — chr_coordinates_hg19","text":"Reference coordinates (hg19)","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/chr_coordinates_hg19.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"hg19 coordinates — chr_coordinates_hg19","text":"","code":"chr_coordinates_hg19"},{"path":[]},{"path":"https://caravagnalab.github.io/tickTack/reference/chr_coordinates_hg19.html","id":"chr-coordinates-hg-","dir":"Reference","previous_headings":"","what":"chr_coordinates_hg19","title":"hg19 coordinates — chr_coordinates_hg19","text":"data frame: chr chromosome identifier length length chromosome Absolute coordinate chromosome start Absolute coordinate chromosome end centromerStart Absolute coordinate chromosome centromere start centromerEnd Absolute coordinate chromosome centromere end","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/chr_coordinates_hg19.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"hg19 coordinates — chr_coordinates_hg19","text":".","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/fit.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit timing of clonal peaks in cancer genome sequencing data — fit","title":"Fit timing of clonal peaks in cancer genome sequencing data — fit","text":"function fits timing clonal peaks cancer genome sequencing data using either beta-binomial binomial model.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/fit.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit timing of clonal peaks in cancer genome sequencing data — fit","text":"","code":"fit(   segments,   mutations,   purity,   possible_k = c(\"2:1\", \"2:2\", \"2:0\"),   alpha = 0.05,   min_mutations_number = 2,   beta_binomial = FALSE,   beta_binomial_disp = 0.01 )"},{"path":"https://caravagnalab.github.io/tickTack/reference/fit.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit timing of clonal peaks in cancer genome sequencing data — fit","text":"segments data frame containing segment information columns chr, , , Major, minor. mutations data frame containing mutation information columns chr, , , DP, NV. purity numeric value representing tumor purity. possible_k character vector possible karyotypes format \"Major:minor\". Default c(\"2:1\", \"2:2\", \"2:0\"). alpha numeric value significance level. Default 0.05. min_mutations_number integer specifying minimum number mutations required analysis. Default 2. beta_binomial logical value indicating whether use beta-binomial model. Default FALSE. beta_binomial_disp numeric value beta-binomial dispersion parameter. Default 0.01.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/fit.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit timing of clonal peaks in cancer genome sequencing data — fit","text":"list containing two tibbles: inference_results summarized_results. Returns NULL results obtained.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/fit_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Get the fit to obtain the clocks posteriors — fit_h","title":"Get the fit to obtain the clocks posteriors — fit_h","text":"Obtain approximate posterior clocks model fit number components k_max.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/fit_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get the fit to obtain the clocks posteriors — fit_h","text":"","code":"fit_h(   x,   max_attempts = 2,   INIT = TRUE,   tolerance = 0.01,   possible_k = c(\"2:1\", \"2:2\", \"2:0\"),   alpha = 0.05,   min_mutations_number = 2,   n_components = 0,   initial_iter = 200,   grad_samples = 200,   elbo_samples = 200 )"},{"path":"https://caravagnalab.github.io/tickTack/reference/fit_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get the fit to obtain the clocks posteriors — fit_h","text":"x list: CNAqc object. max_attempts num: max number repeated inference ADVI INIT logical: boolean variable set initialization phase TRUE FALSE tolerance num: tolerance ELBO optimization procedure possible_k chr: \"2:1\" \"2:2\" \"2:0\" alpha num: (type double) confidence interval level choose data fall expected binomial intervals min_mutations_number num: (type double) minimum number accepted mutations segment included inference n_components number components specified user initial_iter description grad_samples description elbo_samples description","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/fit_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get the fit to obtain the clocks posteriors — fit_h","text":"results_and_data = list(data = input_data_list, results = results, output_files_list = output_files_list)","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/fit_variational_h.html","id":null,"dir":"Reference","previous_headings":"","what":"fit_variational Function — fit_variational_h","title":"fit_variational Function — fit_variational_h","text":"function performs inference using ADVI algorithm. Repeat inference fails repeat avoid local minima, taking best run.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/fit_variational_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"fit_variational Function — fit_variational_h","text":"","code":"fit_variational_h(   input_data,   max_attempts = 2,   initialization = NULL,   INIT = TRUE,   initial_iter = 100,   grad_samples = 200,   elbo_samples = 200,   tolerance = 0.01 )"},{"path":"https://caravagnalab.github.io/tickTack/reference/fit_variational_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"fit_variational Function — fit_variational_h","text":"input_data list: List 7: $S: int, $N: int, $karyotype: num (0 1), $seg_assignment: num, $peaks:List N num (1:2), $NV: num, $DP: num max_attempts num: max number repeated inference ADVI initialization list: List 4: $w: num (1:S, 1:3), $tau: num (1:K), $phi: num (1:K), $kappa: num INIT logical: boolean variable set initialization phase TRUE FALSE initial_iter description grad_samples description elbo_samples description tolerance num: tolerance ELBO optimization procedure","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/fit_variational_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"fit_variational Function — fit_variational_h","text":"best_fit","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/get_clonal_peaks.html","id":null,"dir":"Reference","previous_headings":"","what":"get_clonal_peaks Function — get_clonal_peaks","title":"get_clonal_peaks Function — get_clonal_peaks","text":"Obtain theoretical peaks observed VAF spectrum.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/get_clonal_peaks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_clonal_peaks Function — get_clonal_peaks","text":"","code":"get_clonal_peaks(k, purity)"},{"path":"https://caravagnalab.github.io/tickTack/reference/get_clonal_peaks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_clonal_peaks Function — get_clonal_peaks","text":"k karyotype purity peaks","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/get_initialization.html","id":null,"dir":"Reference","previous_headings":"","what":"get_initialization — get_initialization","title":"get_initialization — get_initialization","text":"Perform c-means proportions mutations fall first second binomial interval (accepted mutations) retrieve centroids u matrix used initialization parameters.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/get_initialization.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get_initialization — get_initialization","text":"","code":"get_initialization(input_data, purity, phi = c(), kappa = 5, alpha = 0.05)"},{"path":"https://caravagnalab.github.io/tickTack/reference/get_initialization.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get_initialization — get_initialization","text":"input_data list: List 7: $S: int, $N: int, $karyotype: num (0 1), $seg_assignment: num, $peaks:List N num (1:2), $NV: num, $DP: num purity num: (type = double) sample purity 0 1 phi parameters dirichlet reparametrization uniformly initialized kappa parameters dirichlet reparametrization alpha num: (type double) confidence interval level choose data fall expected binomial intervals","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/get_initialization.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get_initialization — get_initialization","text":"inits list: List 4: $w: num (1:S, 1:3), $tau: num (1:K), $phi: num (1:K), $kappa: num","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/karyo_to_int.html","id":null,"dir":"Reference","previous_headings":"","what":"karyo_to_int Function — karyo_to_int","title":"karyo_to_int Function — karyo_to_int","text":"function allows change string representation CN events numeric values 0 - 1.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/karyo_to_int.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"karyo_to_int Function — karyo_to_int","text":"","code":"karyo_to_int(k)"},{"path":"https://caravagnalab.github.io/tickTack/reference/karyo_to_int.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"karyo_to_int Function — karyo_to_int","text":"k karyotype string","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/model_selection_h.html","id":null,"dir":"Reference","previous_headings":"","what":"model_selection Function — model_selection_h","title":"model_selection Function — model_selection_h","text":"Perform model selection among models fit varying number mixture components (number clocks).","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/model_selection_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"model_selection Function — model_selection_h","text":"","code":"model_selection_h(results, n_components = 0)"},{"path":"https://caravagnalab.github.io/tickTack/reference/model_selection_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"model_selection Function — model_selection_h","text":"results list 4: $data, $draws_and_summary, $log_lik_matrix_list $elbo_iterations n_components number components specified user","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/model_selection_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"model_selection Function — model_selection_h","text":"result_model_selection: list $best_fit, $best_K, $model_selection_tibble, $entropy_list)","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/pcawg_example.html","id":null,"dir":"Reference","previous_headings":"","what":"pcawg_example — pcawg_example","title":"pcawg_example — pcawg_example","text":"Pcawg example test timing inference","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/pcawg_example.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pcawg_example — pcawg_example","text":"","code":"pcawg_example"},{"path":[]},{"path":"https://caravagnalab.github.io/tickTack/reference/pcawg_example.html","id":"pcawg-example","dir":"Reference","previous_headings":"","what":"pcawg_example","title":"pcawg_example — pcawg_example","text":"list: mutations tibble observed mutations cna tibble observed copy number alterations metadata tibble containing sample metadata","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/pcawg_example.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"pcawg_example — pcawg_example","text":".","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/pcawg_example_2.html","id":null,"dir":"Reference","previous_headings":"","what":"pcawg_example_2 — pcawg_example_2","title":"pcawg_example_2 — pcawg_example_2","text":"Pcawg example test timing inference","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/pcawg_example_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"pcawg_example_2 — pcawg_example_2","text":"","code":"pcawg_example_2"},{"path":[]},{"path":"https://caravagnalab.github.io/tickTack/reference/pcawg_example_2.html","id":"pcawg-example-","dir":"Reference","previous_headings":"","what":"pcawg_example_2","title":"pcawg_example_2 — pcawg_example_2","text":"list: mutations tibble observed mutations cna tibble observed copy number alterations metadata tibble containing sample metadata","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/pcawg_example_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"pcawg_example_2 — pcawg_example_2","text":".","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_elbo_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot elbo Function — plot_elbo_h","title":"Plot elbo Function — plot_elbo_h","text":"Plot ELBO behaviour fit fixing number cluster.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_elbo_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot elbo Function — plot_elbo_h","text":"","code":"plot_elbo_h(elbo_iteration)"},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_elbo_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot elbo Function — plot_elbo_h","text":"elbo_iteration data.frame':    #iterations convergence elbo obs.  2 variables: iteration: int, elbo     : num one element list elbo_iteration obtained fit_h \"results\"","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_elbo_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot elbo Function — plot_elbo_h","text":"p","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_model_selection_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot the behavior of the model selection scores vs the number of clusters — plot_model_selection_h","title":"Plot the behavior of the model selection scores vs the number of clusters — plot_model_selection_h","text":"Plot BIC, Log Likelihood, ICL scores obtatined fit number cluster.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_model_selection_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot the behavior of the model selection scores vs the number of clusters — plot_model_selection_h","text":"","code":"plot_model_selection_h(model_selection_tibble, best_K)"},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_model_selection_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot the behavior of the model selection scores vs the number of clusters — plot_model_selection_h","text":"model_selection_tibble tibble 3 scores k_max values, one inference best_K integer corresponding best number components","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_model_selection_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot the behavior of the model selection scores vs the number of clusters — plot_model_selection_h","text":"model_selection_plot","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_posterior_clocks_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot posterior clocks distributions obtained from the hierarchical model fit — plot_posterior_clocks_h","title":"Plot posterior clocks distributions obtained from the hierarchical model fit — plot_posterior_clocks_h","text":"Plot posterior clocks distributions obtained hierarchical model fit","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_posterior_clocks_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot posterior clocks distributions obtained from the hierarchical model fit — plot_posterior_clocks_h","text":"","code":"plot_posterior_clocks_h(results, K)"},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_posterior_clocks_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot posterior clocks distributions obtained from the hierarchical model fit — plot_posterior_clocks_h","text":"results list 4: $data, $draws_and_summary, $log_lik_matrix_list $elbo_iterations K index inference whose results want plotted","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_posterior_clocks_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot posterior clocks distributions obtained from the hierarchical model fit — plot_posterior_clocks_h","text":"areas_tau","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_posterior_weights_h.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot posterior weights distributions obtained from the hierarchical model fit — plot_posterior_weights_h","title":"Plot posterior weights distributions obtained from the hierarchical model fit — plot_posterior_weights_h","text":"Plot posterior weights distributions obtained hierarchical model fit","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_posterior_weights_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot posterior weights distributions obtained from the hierarchical model fit — plot_posterior_weights_h","text":"","code":"plot_posterior_weights_h(results, K)"},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_posterior_weights_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot posterior weights distributions obtained from the hierarchical model fit — plot_posterior_weights_h","text":"results list 4: $data, $draws_and_summary, $log_lik_matrix_list $elbo_iterations K index inference whose results want plotted","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_posterior_weights_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot posterior weights distributions obtained from the hierarchical model fit — plot_posterior_weights_h","text":"areas_tau","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_timing.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot timing of clonal peaks in cancer genome sequencing data — plot_timing","title":"Plot timing of clonal peaks in cancer genome sequencing data — plot_timing","text":"function generates plot showing timing clonal peaks cancer genome sequencing data.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_timing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot timing of clonal peaks in cancer genome sequencing data — plot_timing","text":"","code":"plot_timing(fit_results, segments, colour_by = \"karyotype\", ref = \"GRCh38\")"},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_timing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot timing of clonal peaks in cancer genome sequencing data — plot_timing","text":"fit_results list containing results fit_timing function, specifically summarized_results. segments data frame containing segment information columns chr, , , Major, minor. colour_by character string specifying variable color plot . Default \"karyotype\". ref Reference genome desired. Either 'GRCh38' 'hg19'","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_timing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot timing of clonal peaks in cancer genome sequencing data — plot_timing","text":"ggplot object showing timing clonal peaks.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_timing_h.html","id":null,"dir":"Reference","previous_headings":"","what":"plot_timing_h Function — plot_timing_h","title":"plot_timing_h Function — plot_timing_h","text":"function obtains list input data used stan model.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_timing_h.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot_timing_h Function — plot_timing_h","text":"","code":"plot_timing_h(   results,   K,   colour_by = \"karyotype\",   split_contiguous_segments = TRUE )"},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_timing_h.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot_timing_h Function — plot_timing_h","text":"results list(data = input_data_list, results = results, output_files_list = output_files_list) K mun: number clocks colour_by chr: default =  \"karyotype\" split_contiguous_segments option plot segments' setalarion lines","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/plot_timing_h.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"plot_timing_h Function — plot_timing_h","text":"p : plot inference results credibility intervals chromosome absolute positions","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/prepare_input_data.html","id":null,"dir":"Reference","previous_headings":"","what":"prepare_input_data Function — prepare_input_data","title":"prepare_input_data Function — prepare_input_data","text":"function obtains list input data used stan model.","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/prepare_input_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepare_input_data Function — prepare_input_data","text":"","code":"prepare_input_data(   mutations,   segments,   purity,   possible_k = c(\"2:1\", \"2:2\", \"2:0\"),   alpha = 0.05,   min_mutations_number = 2 )"},{"path":"https://caravagnalab.github.io/tickTack/reference/prepare_input_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepare_input_data Function — prepare_input_data","text":"mutations list: output CNAqc Mutations(x), x CNAqc object segments list: output CNAqc CNA(x), x CNAqc object purity num: (type = double) sample purity 0 1 possible_k chr: \"2:1\" \"2:2\" \"2:0\" alpha num: (type double) confidence interval level choose data fall expected binomial intervals min_mutations_number num: (type double) minimum number accepted mutations segment included inference","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/prepare_input_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"prepare_input_data Function — prepare_input_data","text":"accepted_data: list $input_data:list: List 7: $S: int, $N: int, $karyotype: num (0 1), $seg_assignment: num, $peaks:List N num (1:2), $NV: num, $DP: num $accepted_cna: tibble (S × 5)(S3: tbl_df/tbl/data.frame): $segment_original_indx: int, $segment_name: chr, $segment_id: num, $karyotype: chr, $chr: chr","code":""},{"path":"https://caravagnalab.github.io/tickTack/reference/tickTack-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tickTack: Timing Inference for Copy number alterations: Tracking Alterations in Cancer Karyotypes — tickTack-package","title":"tickTack: Timing Inference for Copy number alterations: Tracking Alterations in Cancer Karyotypes — tickTack-package","text":"package (one paragraph).","code":""},{"path":[]},{"path":"https://caravagnalab.github.io/tickTack/reference/tickTack-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tickTack: Timing Inference for Copy number alterations: Tracking Alterations in Cancer Karyotypes — tickTack-package","text":"Maintainer: First Last first.last@example.com (ORCID)","code":""}]
