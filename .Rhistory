rep("1", 100),
rep("2", 160)
)
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x, col=p)) +
geom_histogram(bins = 100)
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x, col=p, fill=p)) +
geom_histogram(bins = 100)
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x, col=p, fill=p)) +
geom_histogram(bins = 100) +
geom_density()
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x, col=p, fill=p)) +
geom_histogram(aes(y = ..density..), bins = 100) +
geom_density()
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 100) +
geom_density()
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x, col=p, fill=p)) +
geom_histogram(aes(y = ..density..)) +
geom_density()
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x, col=p, fill=p)) +
geom_histogram(aes(y = ..density..), bins = 50, alpha = .5) +
geom_density()
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x, col=p, fill=p)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = 0)
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x, col=p, fill=p)) +
#geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = .5)
setwd("~/Desktop/")
rm(list = ls())
require(magrittr)
require(tidyverse)
require(rRACES)
set.seed(12345)
x <- c(
rbinom(100, 50, .33),
rbinom(200, 50, .66)
)
peaks = c(
rep("1", 100),
rep("2", 200)
)
dplyr::tibble(x=x, p =peaks) %>%
ggplot(mapping = aes(x=x, col=p, fill=p)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = )
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x, col=p, fill=p)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = .8)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = .8)
rbinom(100, 50, .33)
setwd("~/Desktop/")
rm(list = ls())
require(magrittr)
require(tidyverse)
require(rRACES)
set.seed(12345)
COV = 100
x <- c(
rbinom(100, COV, .33) / COV,
rbinom(200, COV, .66) / COV
)
peaks = c(
rep("1", 100),
rep("2", 200)
)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = .8)
COV = 50
x <- c(
rbinom(100, COV, .33) / COV,
rbinom(200, COV, .66) / COV
)
peaks = c(
rep("1", 100),
rep("2", 200)
)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = .8)
COV = 50
x <- c(
rbinom(100, COV, .33) / COV,
rbinom(200, COV, .66) / COV
)
peaks = c(
rep("1", 100),
rep("2", 200)
)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = .8)
COV = 50
x <- c(
rbinom(100, COV, .33) / COV,
rbinom(200, COV, .66) / COV
)
peaks = c(
rep("1", 100),
rep("2", 200)
)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = .8)
COV = 50
x <- c(
rbinom(100, COV, .33) / COV,
rbinom(200, COV, .66) / COV
)
peaks = c(
rep("1", 100),
rep("2", 200)
)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = .8)
setwd("~/Desktop/")
rm(list = ls())
require(magrittr)
require(tidyverse)
require(rRACES)
set.seed(12345)
COV = 50
n1 = 1000
n2 = 2000
x <- c(
rbinom(n1, COV, .33) / COV,
rbinom(n2, COV, .66) / COV
)
peaks = c(
rep("1", n1),
rep("2", n2)
)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 50) +
geom_density(alpha = .8)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..)) +
geom_density(alpha = .8)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 29) +
geom_density(alpha = .8)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 40) +
geom_density(alpha = .8)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 30) +
geom_density(alpha = .8)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_histogram(aes(y = ..density..), bins = 35) +
geom_density(alpha = .8)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
#geom_histogram(aes(y = ..density..), bins = 35) +
geom_density(alpha = .8)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
#geom_histogram(aes(y = ..density..), bins = 35) +
geom_density(alpha = .8, fill = "darkslategray")
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray") +
geom_histogram(aes(y = ..density..), bins = 35)
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray")
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray") +
geom_vline(xintercept = .33, color = "red", linetype = "dashed") +
geom_vline(xintercept = .66, color = "green", linetype = "dashed")
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray") +
geom_vline(xintercept = .33, color = "red", linetype = "dashed") +
geom_vline(xintercept = .66, color = "green", linetype = "dashed") +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth = 3) +
geom_vline(xintercept = .66, color = "forestgreen", linetype = "dashed", linewidth=4) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth = 3) +
geom_vline(xintercept = .66, color = "forestgreen", linetype = "dashed", linewidth=3) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "forestgreen", linetype = "dashed", linewidth=2) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "steelblue", linetype = "dashed", linewidth=2) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "#B0C4DE", linetype = "dashed", linewidth=2) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray", col = "") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "#B0C4DE", linetype = "dashed", linewidth=2) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray", col = "white") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "#B0C4DE", linetype = "dashed", linewidth=2) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .6, fill = "darkslategray", col = "white") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "#B0C4DE", linetype = "dashed", linewidth=2) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .7, fill = "darkslategray", col = "white") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "#B0C4DE", linetype = "dashed", linewidth=2) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray", col = "white") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "#B0C4DE", linetype = "dashed", linewidth=2) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray", col = "darkslategray") +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "#B0C4DE", linetype = "dashed", linewidth=2) +
theme_void()
dplyr::tibble(x=x, p=peaks) %>%
ggplot(mapping = aes(x=x)) +
geom_density(alpha = .8, fill = "darkslategray", col = "darkslategray", linewidth = 2) +
geom_vline(xintercept = .33, color = "indianred3", linetype = "dashed", linewidth =2) +
geom_vline(xintercept = .66, color = "#B0C4DE", linetype = "dashed", linewidth=2) +
theme_void()
ggsave("~/Downloads/vaf_peaks.svg", width = 10, height = 8, plot = last_plot())
ggsave("~/Downloads/vaf_peaks.svg", width = 10, height = 5, plot = last_plot())
setwd("~/GitHub/tickTack")
usethis::use_logo("~/Downloads/clock-circle-svgrepo-com.png")
usethis::use_logo("~/Downloads/clock-circle-svgrepo-com.png")
usethis::use_logo("~/Downloads/clock-circle-svgrepo-com.png")
devtools::document()
devtools::build_site()
clear
ls
clear
setwd("~/Desktop/")
rm(list = ls())
require(magrittr)
require(tidyverse)
require(rRACES)
set.seed(12345)
m = matrix(1:9, nrow = 3, ncol = 3)
m
t(m)
m = matrix(c(8,2,3,2,9,1,9,0,6), nrow = 3, ncol = 3)
m
input <- "
8 2 3\n
2 9 1\n
9 0 6"
img <- matrix(scan(text = readLines(input, n = size)), nrow = size, byrow = TRUE)
size = 3
img <- matrix(scan(text = readLines(input, n = size)), nrow = size, byrow = TRUE)
input <- "
8 2 3\n
2 9 1\n
9 0 6"
size = 3
img <- matrix(scan(text = readLines(input, n = size)), nrow = size, byrow = TRUE)
m
m = matrix(c(8,2,3,2,9,1,9,0,6), nrow = 3, ncol = 3)
m
m = matrix(c(8,2,9,2,9,0,3,1,6), nrow = 3, ncol = 3)
m
t(m)
t(m)
nrow(m):1
t(m[nrow(m):1,])
t(m[,nrow(m):1])
m
m[1,]
to_print = paste0(to_print, m[1])
to_print = ""
to_print = paste0(to_print, m[1])
to_print
to_print = ""
to_print = paste0(to_print, m[1,])
to_print
to_print = paste0(to_print, m[1,], collapse = "")
m[1,]
to_print = ""
to_print = paste0(to_print, m[1,], collapse = "")
to_print
to_print = ""
to_print = paste0(to_print, m[1,], collapse = " ")
to_print
to_print = ""
for (i in 1:nrow(m)) {
to_print = paste0(to_print, m[1,], collapse = " ")
to_print = paste0(to_print, "\n")
}
m = t(m[,ncol(m):1])
to_print = ""
for (i in 1:nrow(m)) {
to_print = paste0(to_print, m[i,], collapse = " ")
to_print = paste0(to_print, "\n")
}
print(to_print)
to_print = ""
for (i in 1:nrow(m)) {
to_print = paste0(to_print, m[i,], collapse = " ")
to_print = paste0(to_print, "\n", collapse = "")
}
print(to_print)
to_print
to_print = ""
for (i in 1:nrow(m)) {
to_print = paste0(to_print, m[i,], collapse = " ")
print(paste0(to_print, m[i,], collapse = " "))
to_print = paste0(to_print, "\n", collapse = "")
}
to_print = ""
for (i in 1:nrow(m)) {
to_print = paste0(to_print, m[i,], collapse = " ")
print(paste0(m[i,], collapse = " "))
to_print = paste0(to_print, "\n", collapse = "")
}
to_print = ""
for (i in 1:nrow(m)) {
to_print = paste0(to_print, m[i,], collapse = " ")
print(paste0(m[i,], collapse = " "))
to_print = paste0(to_print, "\n", collapse = "")
}
print(to_print)
to_print
print(to_print)
as.character(m)
apply(m, 1, function(row) cat(row, "\n"))
ciphertext <- "Eqfkpi vguvu ctg hwp!"
ciphertext
ascii_code <- as.integer(charToRaw(letter))
strsplit(ciphertext, "")
unlist(strsplit(ciphertext, ""))
letters <- unlist(strsplit(ciphertext, ""))
letter <- letters[1]
ascii_code <- as.integer(charToRaw(letter))
ascii_code
letter
shift = 1
letters <- unlist(strsplit(ciphertext, ""))
letter <- letters[1]
ascii_code <- as.integer(charToRaw(letter))
shifted_code <- ((ascii_code + shift) %% 26) + base
shifted_code <- ((ascii_code + shift) %% 26)
shifted_code
# Convert back to a character
rawToChar(as.raw(shifted_code))
as.raw(shifted_code)
base <- if (is_upper) as.integer(charToRaw("A")) else as.integer(charToRaw("a"))
# Determine if the letter is uppercase or lowercase
is_upper <- grepl("[A-Z]", letter)
is_upper
ascii_code <- as.integer(charToRaw(letter))
base <- if (is_upper) as.integer(charToRaw("A")) else as.integer(charToRaw("a"))
base
shifted_code <- ((ascii_code + shift) %% 26)
shifted_code
# Convert back to a character
rawToChar(as.raw(shifted_code))
shifted_code
shifted_code <- ((ascii_code - base + shift) %% 26) + base
shifted_code
# Convert back to a character
rawToChar(as.raw(shifted_code))
lapply(letters, function(letter) {
if (nchar(letter) != 1 || !grepl("[a-zA-Z]", letter)) {
return(letter)
}
# Determine if the letter is uppercase or lowercase
is_upper <- grepl("[A-Z]", letter)
ascii_code <- as.integer(charToRaw(letter))
base <- if (is_upper) as.integer(charToRaw("A")) else as.integer(charToRaw("a"))
shifted_code <- ((ascii_code - base + shift) %% 26) + base
# Convert back to a character
rawToChar(as.raw(shifted_code))
})
lapply(letters, function(letter) {
if (nchar(letter) != 1 || !grepl("[a-zA-Z]", letter)) {
return(letter)
}
# Determine if the letter is uppercase or lowercase
is_upper <- grepl("[A-Z]", letter)
ascii_code <- as.integer(charToRaw(letter))
base <- if (is_upper) as.integer(charToRaw("A")) else as.integer(charToRaw("a"))
shifted_code <- ((ascii_code - base + shift) %% 26) + base
# Convert back to a character
rawToChar(as.raw(shifted_code))
}) %>% unlist()
lapply(letters, function(letter) {
if (nchar(letter) != 1 || !grepl("[a-zA-Z]", letter)) {
return(letter)
}
# Determine if the letter is uppercase or lowercase
is_upper <- grepl("[A-Z]", letter)
ascii_code <- as.integer(charToRaw(letter))
base <- if (is_upper) as.integer(charToRaw("A")) else as.integer(charToRaw("a"))
shifted_code <- ((ascii_code - base + shift) %% 26) + base
# Convert back to a character
rawToChar(as.raw(shifted_code))
}) %>% unlist() %>%
paste0()
lapply(letters, function(letter) {
if (nchar(letter) != 1 || !grepl("[a-zA-Z]", letter)) {
return(letter)
}
# Determine if the letter is uppercase or lowercase
is_upper <- grepl("[A-Z]", letter)
ascii_code <- as.integer(charToRaw(letter))
base <- if (is_upper) as.integer(charToRaw("A")) else as.integer(charToRaw("a"))
shifted_code <- ((ascii_code - base + shift) %% 26) + base
# Convert back to a character
rawToChar(as.raw(shifted_code))
}) %>% unlist() %>%
paste0(collapse = "")
ciphertext <- "Eqfkpi vguvu ctg hwp!"
ciphertext <- "Eqfkpi vguvu ctg hwp!"
knownWord <- "tests"
letters <- unlist(strsplit(ciphertext, ""))
letter <- letters[1]
ciphertext <- "Eqfkpi vguvu ctg hwp!"
knownWord <- "tests"
for (shift in c(-26:26)) {
letters <- unlist(strsplit(ciphertext, ""))
new_string = lapply(letters, function(letter) {
if (nchar(letter) != 1 || !grepl("[a-zA-Z]", letter)) {
return(letter)
}
# Determine if the letter is uppercase or lowercase
is_upper <- grepl("[A-Z]", letter)
ascii_code <- as.integer(charToRaw(letter))
base <- if (is_upper) as.integer(charToRaw("A")) else as.integer(charToRaw("a"))
shifted_code <- ((ascii_code - base + shift) %% 26) + base
# Convert back to a character
rawToChar(as.raw(shifted_code))
}) %>% unlist() %>%
paste0(collapse = "")
if (grepl(knownWord, new_string)) {
return(new_string)
}
}
ciphertext <- "Eqfkpi vguvu ctg hwp!"
knownWord <- "tests"
for (shift in c(-26:26)) {
letters <- unlist(strsplit(ciphertext, ""))
new_string = lapply(letters, function(letter) {
if (nchar(letter) != 1 || !grepl("[a-zA-Z]", letter)) {
return(letter)
}
# Determine if the letter is uppercase or lowercase
is_upper <- grepl("[A-Z]", letter)
ascii_code <- as.integer(charToRaw(letter))
base <- if (is_upper) as.integer(charToRaw("A")) else as.integer(charToRaw("a"))
shifted_code <- ((ascii_code - base + shift) %% 26) + base
# Convert back to a character
rawToChar(as.raw(shifted_code))
}) %>% unlist() %>%
paste0(collapse = "")
if (grepl(knownWord, new_string)) {
print(new_string)
return(new_string)
}
}
